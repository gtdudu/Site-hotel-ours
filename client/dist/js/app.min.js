var myApp=angular.module("ngclient",["ngRoute","ngAnimate","ui.bootstrap"]);myApp.config(function($routeProvider,$httpProvider,$locationProvider){$httpProvider.interceptors.push("TokenInterceptor"),$routeProvider.when("/login",{templateUrl:"user/login.html",controller:"loginCtrl",requiredLogin:!1}).when("/",{redirectTo:"/hotel"}).when("/dashboard",{templateUrl:"dashboard/dashboard.html",controller:"privateController",requiredLogin:!0,requiredAdmin:!0}).when("/hotel",{templateUrl:"hotel/hotel.html",controller:"hotelCtrl"}).when("/chambres",{templateUrl:"room/room.html",controller:"roomCtrl"}).when("/gallery/:id",{templateUrl:"gallery/gallery-view.html",controller:"galleryController",requiredLogin:!1}).when("/post/:id",{templateUrl:"post/post-view.html",controller:"postController",requiredLogin:!1}).when("/post/:id/edit",{templateUrl:"post/post-edit.html",controller:"postController",requiredLogin:!0}).when("/nop",{templateUrl:"error/unauthorized.html",requiredLogin:!1}).otherwise({templateUrl:"error/404.html"}),$locationProvider.html5Mode(!0)}),myApp.run(function($rootScope,$window,$location,LoggedFactory){LoggedFactory.check(),$rootScope.$on("$routeChangeStart",function(event,nextRoute,currentRoute){nextRoute.requiredLogin&&!LoggedFactory.isLogged&&$location.path("/login"),nextRoute.requiredAdmin&&"admin"!==LoggedFactory.userRole&&$location.path("/nop")}),$rootScope.$on("$routeChangeSuccess",function(event,nextRoute,currentRoute){$rootScope.showMenu=LoggedFactory.isLogged,LoggedFactory.isLogged===!0&&"/login"==$location.path()&&$location.path("/")})}),function(){"use strict";function PrivateController($scope,$location,$routeParams,LoggedFactory){$scope.data={on:LoggedFactory.isLogged,singleSelect:"posts"},$scope.check=function(arg){return!(!arg||$scope.data.singleSelect!=arg)}}angular.module("ngclient").controller("privateController",PrivateController),PrivateController.$inject=["$scope","$location","$routeParams","LoggedFactory"]}(),function(){"use strict";function validateFileType(file){if(file.type.match(/image.*/)){var allowedTypes=["png","jpg","jpeg"],fileType=file.name.split(".");if(fileType=fileType[fileType.length-1],-1!=allowedTypes.indexOf(fileType))return!0}return!1}function resizeImage(dataUrl,max_height,max_width){var img=document.createElement("img");img.src=dataUrl;var width=img.width,height=img.height,scale=Math.min(max_height/width,max_width/height);1>scale&&(height*=scale,width*=scale);var canvas=document.createElement("canvas");canvas.width=width,canvas.height=height;var ctx=canvas.getContext("2d");return ctx.drawImage(img,0,0,width,height),canvas}function getPic(pic,arr){if(validateFileType(pic)){var reader=new FileReader;reader.readAsDataURL(pic),reader.addEventListener("load",function(){resizeImage(this.result,200,200);arr.push(this.result)},!1)}}function GalleryController($scope,galleryFactory,$location,$routeParams,LoggedFactory){$scope.myInterval=3e3,$scope.images=[],$scope.galleries=[],$scope.init=function(){galleryFactory.getGalleries().then(function(data){$scope.galleries=data.data,data.data.length&&($scope.selected=data.data[0])})},$scope.slice=function(){},$scope["class"]=function(i){return i==$scope.selected._id?"active":""},$scope.select=function(src){$scope.selected=src},$scope.findOne=function(){galleryFactory.getGallery($routeParams.id).then(function(data){$scope.gallery=data.data})},$scope.create=function(err,res){var gallery={};gallery.title=$scope.galleryTitle,gallery.images=$scope.images,galleryFactory.createGallery(gallery),$location.path("/galleries")},$scope.imageUpload=function(event){for(var files=event.target.files,i=0;i<files.length;i++){var file=files[i];getPic(file,$scope.images)}},$scope.goToView=function(gallery){$location.path("/gallery/"+gallery._id)},$scope.isAdmin=function(){return"admin"===LoggedFactory.userRole}}angular.module("ngclient").controller("galleryController",GalleryController),GalleryController.$inject=["$scope","galleryFactory","$location","$routeParams","LoggedFactory"]}(),function(){"use strict";function HeaderCtrl($scope,$window,$location,AuthFactory,LoggedFactory){$scope.isActive=function(route){return route===$location.path()},$scope.isAdmin=function(){return"admin"===LoggedFactory.userRole},$scope.logout=function(){AuthFactory.logout()},$scope.scrollTo=function(id){var $=window.jQuery,speed=750;return $("html, body").animate({scrollTop:$("#"+id).offset().top},speed),!1}}angular.module("ngclient").controller("headerCtrl",HeaderCtrl),HeaderCtrl.$inject=["$scope","$window","$location","AuthFactory","LoggedFactory"]}(),function(){"use strict";function HotelCtrl($scope,$window){$scope.notif={msg:"fzae","class":"failure",show:function(){return""!==this.msg}},$scope.user=$window.sessionStorage.user,$scope.role=$window.sessionStorage.userRole}angular.module("ngclient").controller("hotelCtrl",HotelCtrl),HotelCtrl.$inject=["$scope","$window"]}(),function(){"use strict";function LoginCtrl($scope,$window,$location,AuthFactory,LoggedFactory){$scope.login=function(){var username=$scope.username,password=$scope.password;void 0!==username&&void 0!==password?AuthFactory.login(username,password).success(function(data){LoggedFactory.isLogged=!0,LoggedFactory.user=data.user.username,LoggedFactory.userRole=data.user.role,$window.sessionStorage.token=data.token,$window.sessionStorage.user=data.user.username,$window.sessionStorage.userRole=data.user.role,$location.path("/")}).error(function(status){console.log("Noooooooooo, something went wrong!")}):console.log("Can't get in there buddy, invalid credentials...")}}angular.module("ngclient").controller("loginCtrl",LoginCtrl),LoginCtrl.$inject=["$scope","$window","$location","AuthFactory","LoggedFactory"]}(),function(){"use strict";function validateFileType(file){if(file.type.match(/image.*/)){var allowedTypes=["png","jpg","jpeg"],fileType=file.name.split(".");if(fileType=fileType[fileType.length-1],-1!=allowedTypes.indexOf(fileType))return!0}return!1}function resizeImage(dataUrl,max_height,max_width){var img=document.createElement("img");img.src=dataUrl;var width=img.width,height=img.height,scale=Math.min(max_height/width,max_width/height);1>scale&&(height*=scale,width*=scale);var canvas=document.createElement("canvas");canvas.width=width,canvas.height=height;var ctx=canvas.getContext("2d");return ctx.drawImage(img,0,0,width,height),canvas}function getPic(pic,arr){if(validateFileType(pic)){var reader=new FileReader;reader.readAsDataURL(pic),reader.addEventListener("load",function(){resizeImage(this.result,200,200);arr.push(this.result)},!1)}}function PostController($scope,postFactory,$location,$routeParams,LoggedFactory){$scope.posts=[],$scope.images=[],$scope.init=function(){postFactory.getPosts().then(function(data){$scope.posts=data.data,console.log(data)})},$scope.showContent=function($fileContent){$scope.content=$fileContent},$scope.remove=function(post){postFactory.deletePost(post._id);var index=$scope.posts.indexOf(post);$scope.posts.splice(index,1)},$scope.edit=function(post){console.log(post)},$scope.goToView=function(post){$location.path("/post/"+post._id)},$scope.goToCreate=function(){$location.path("/post/create")},$scope.goToEdit=function(post){$location.path("/post/"+post._id+"/edit")},$scope.create=function(err,res){var post={};post.title=$scope.postTitle,post.content=$scope.postContent,post.images=$scope.images[0],postFactory.createPost(post),$location.path("/posts")},$scope.update=function(post){postFactory.updatePost(post),$location.path("/posts")},$scope.findOne=function(){postFactory.getPost($routeParams.id).then(function(data){$scope.post=data.data})},$scope.isAdmin=function(){return"admin"===LoggedFactory.userRole},$scope.imageUpload=function(event){for(var files=event.target.files,i=0;i<files.length;i++){var file=files[i];getPic(file,$scope.images)}}}angular.module("ngclient").controller("postController",PostController),PostController.$inject=["$scope","postFactory","$location","$routeParams","LoggedFactory"]}(),function(){"use strict";function RoomCtrl($scope,$window){$scope.test="just testing"}angular.module("ngclient").controller("roomCtrl",RoomCtrl),RoomCtrl.$inject=["$scope","$window"]}(),function(){"use strict";function ScrollupController($scope,$location,$routeParams,LoggedFactory){var $=window.jQuery;window.addEventListener("scroll",function(){this.scrollY>200?$("#Layer_1").css({opacity:1}):$("#Layer_1").css({opacity:0})}),$scope.scroll=function(){var speed=750;return $("html, body").animate({scrollTop:0},speed),!1}}angular.module("ngclient").controller("scrollupController",ScrollupController),ScrollupController.$inject=["$scope","$location","$routeParams","LoggedFactory"]}(),function(){"use strict";function UserController($scope,userFactory,$location,$routeParams){$scope.users=[],$scope.init=function(){userFactory.getUsers().then(function(data){$scope.users=data.data})},$scope.remove=function(user){userFactory.deleteUser(user._id);var index=$scope.users.indexOf(user);$scope.users.splice(index,1)}}angular.module("ngclient").controller("userController",UserController),UserController.$inject=["$scope","userFactory","$location","$routeParams"]}(),function(){function NotificationsProvider(){var options={ttl:5e3};this.setOptions=function(newOptions){return angular.extend(options,newOptions),this},this.ttl=function(ttl){return angular.isDefined(ttl)?(options.ttl=ttl,this):options.ttl},this.$get=function(){function Notifications(){this.options=options,this.element=null}return new Notifications}}angular.module("ngclient").provider("Notifications",NotificationsProvider)}(),function(){"use strict";function NotificationsDirective(Notifications){return{restrict:"AE",link:function(scope,iElem,iAttrs){Notifications.element=iElem}}}angular.module("ngclient").directive("gtNotifications",NotificationsDirective),NotificationsDirective.$inject=["Notifications"]}(),function(){"use strict";function NotificationDirective(Notifications,$animate,$timeout){var defaults={ttl:Notifications.options.ttl||5e3};return{restrict:"AE",scope:!0,controller:NotificationController,controllerAs:"$Notification",link:function(scope,iElem,iAttrs,ctrl){var options=angular.extend({},defaults,scope.$eval(iAttrs.NotificationOptions));iAttrs.ttl&&(options.ttl=scope.$eval(iAttrs.ttl)),$animate.move(iElem,Notifications.element),iAttrs.onOpen&&scope.$eval(iAttrs.onOpen),ctrl.timer=$timeout(function(){$animate.leave(iElem),iAttrs.onClose&&scope.$eval(iAttrs.onClose)},options.ttl)}}}function NotificationController($element,$animate,$attrs,$scope){this.timer=null,this.remove=function(){$animate.leave($element),this.timer&&this.timer.cancel&&(this.timer.cancel(),$attrs.onClose&&$scope.$eval($attrs.onClose))}}angular.module("ngclient").directive("gtNotification",NotificationDirective),NotificationDirective.$inject=["Notifications","$animate","$timeout"],NotificationController.$inject=["$element","$animate","$attrs","$scope"]}(),function(){"use strict";function AuthFactory($window,$location,$http,LoggedFactory){return{login:function(username,password){return $http.post("https://localhost:5555/login",{username:username,password:password})},logout:function(){LoggedFactory.isLogged&&(LoggedFactory.isLogged=!1,delete LoggedFactory.user,delete LoggedFactory.userRole,delete $window.sessionStorage.token,delete $window.sessionStorage.user,delete $window.sessionStorage.userRole,$location.path("/login"))}}}angular.module("ngclient").factory("AuthFactory",AuthFactory),AuthFactory.$inject=["$window","$location","$http","LoggedFactory"]}(),function(){"use strict";function GalleryFactory($http){return{getGalleries:function(){var url="https://localhost:5555/api/v1/galleries";return $http.get(url)},getGallery:function(id){var url="https://localhost:5555/api/v1/gallery/"+id;return $http.get(url)},deleteGallery:function(id){var url="https://localhost:5555/api/v1/admin/gallery/"+id;return $http["delete"](url)},createGallery:function(gallery){var url="https://localhost:5555/api/v1/admin/gallery/";return $http.post(url,{title:gallery.title,images:gallery.images})},updateGallery:function(gallery){var url="https://localhost:5555/api/v1/admin/gallery/"+gallery._id;return $http.put(url,{title:gallery.title,images:gallery.images})}}}angular.module("ngclient").factory("galleryFactory",GalleryFactory),GalleryFactory.$inject=["$http"]}(),function(){"use strict";function LoggedFactory($window){return{isLogged:!1,check:function(){$window.sessionStorage.token&&$window.sessionStorage.user&&$window.sessionStorage.userRole?(this.isLogged=!0,this.user||(this.user=$window.sessionStorage.user),this.userRole||(this.userRole=$window.sessionStorage.userRole)):(this.isLogged=!1,delete this.user,delete this.userRole)}}}angular.module("ngclient").factory("LoggedFactory",LoggedFactory),LoggedFactory.$inject=["$window"]}(),function(){"use strict";function PostFactory($http){return{getPosts:function(){var url="https://localhost:5555/api/v1/posts";return $http.get(url)},getPost:function(id){var url="https://localhost:5555/api/v1/post/"+id;return $http.get(url)},deletePost:function(id){var url="https://localhost:5555/api/v1/admin/post/"+id;return $http["delete"](url)},createPost:function(post){console.log(post);var url="https://localhost:5555/api/v1/admin/post/";return $http.post(url,{title:post.title,content:post.content,images:post.images})},updatePost:function(post){var url="https://localhost:5555/api/v1/admin/post/"+post._id;return $http.put(url,{title:post.title,content:post.content})}}}angular.module("ngclient").factory("postFactory",PostFactory),PostFactory.$inject=["$http"]}(),function(){"use strict";function TokenInterceptor($q,$window){return{request:function(config){return config.headers=config.headers||{},$window.sessionStorage.token&&(config.headers["x-Access-Token"]=$window.sessionStorage.token,config.headers["Content-Type"]="application/json"),config||$q.when(config)},response:function(response){return response||$q.when(response)}}}angular.module("ngclient").factory("TokenInterceptor",TokenInterceptor),TokenInterceptor.$inject=["$q","$window"]}(),function(){"use strict";function UserFactory($http){return{getUsers:function(){var url="https://localhost:5555/api/v1/admin/users";return $http.get(url)},deleteUser:function(id){var url="https://localhost:5555/api/v1/admin/user/"+id;return $http["delete"](url)}}}angular.module("ngclient").factory("userFactory",UserFactory),UserFactory.$inject=["$http"]}();