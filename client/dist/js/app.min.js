var myApp=angular.module("ngclient",["ngRoute","ngAnimate","ui.bootstrap","ngFileUpload"]);myApp.config(function($routeProvider,$httpProvider,$locationProvider){$httpProvider.interceptors.push("TokenInterceptor"),$routeProvider.when("/",{templateUrl:"partials/home.html",requiredLogin:!1}).when("/login",{templateUrl:"dashboard/login.html",controller:"loginCtrl",requiredLogin:!1}).when("/dashboard",{templateUrl:"dashboard/dashboard.html",controller:"privateController",requiredLogin:!0,requiredAdmin:!0}).when("/chambres",{templateUrl:"partials/room.html",requiredLogin:!1}).when("/chambres/:id",{templateUrl:"dashboard/room/view-edit.html",requiredLogin:!0}).when("/restaurant",{templateUrl:"partials/resto.html",requiredLogin:!1}).when("/offres",{templateUrl:"partials/offre.html",requiredLogin:!1}).when("/offre/:id",{templateUrl:"dashboard/offre/view-edit.html",requiredLogin:!0}).when("/privatiser",{templateUrl:"partials/private.html",requiredLogin:!1}).when("/tourisme",{templateUrl:"partials/tourism.html",requiredLogin:!1}).when("/venir",{templateUrl:"partials/contact.html",requiredLogin:!1}).when("/galerie",{templateUrl:"partials/galerie.html",requiredLogin:!1}).when("/forbidden",{templateUrl:"error/unauthorized.html",requiredLogin:!1}).otherwise({templateUrl:"error/404.html",requiredLogin:!1}),$locationProvider.html5Mode(!0)}),myApp.run(function($rootScope,$window,$location,LoggedFactory){$rootScope.lang="fr",LoggedFactory.check(),$rootScope.$on("$routeChangeStart",function(event,nextRoute,currentRoute){nextRoute.requiredLogin&&!LoggedFactory.isLogged&&$location.path("/login"),nextRoute.requiredAdmin&&"admin"!==LoggedFactory.userRole&&$location.path("/forbidden")}),$rootScope.$on("$routeChangeSuccess",function(event,nextRoute,currentRoute){$rootScope.showMenu=LoggedFactory.isLogged,LoggedFactory.isLogged===!0&&"/login"==$location.path()&&$location.path("/")})}),function(){"use strict";function PrivateController($scope,$location,$routeParams,LoggedFactory,AuthFactory){$scope.data={on:LoggedFactory.isLogged,singleSelect:"chambres"},$scope.check=function(arg){return!(!arg||$scope.data.singleSelect!=arg)},$scope.logout=function(){AuthFactory.logout()}}angular.module("ngclient").controller("privateController",PrivateController),PrivateController.$inject=["$scope","$location","$routeParams","LoggedFactory","AuthFactory"]}(),function(){"use strict";function HeaderCtrl($rootScope,$scope,$window,$location,AuthFactory,LoggedFactory){$scope.getLang=function(obj){return obj[$rootScope.lang]},$scope.menu=[{fr:"chambres",en:"room",link:"/chambres"},{fr:"restaurant",en:"restaurant",link:"/restaurant"},{fr:"offres",en:"packages",link:"/offres"},{fr:"privatiser",en:"rent",link:"/privatiser"},{fr:"tourisme",en:"around",link:"/tourisme"},{fr:"galerie",en:"gallery",link:"/galerie"},{fr:"venir",en:"come",link:"/venir"}],$scope.isActive=function(route){return route===$location.path()},$scope.isLogged=function(){return LoggedFactory.user},$scope.isAdmin=function(){return"admin"===LoggedFactory.userRole},$scope.scrollTo=function(id){var $=window.jQuery,speed=750;return $("html, body").animate({scrollTop:$("#"+id).offset().top},speed),!1},$scope.changeLang=function(lang){"en"===lang?$rootScope.lang="en":$rootScope.lang="fr"},$scope.goTo=function(path){$location.path(path)}}angular.module("ngclient").controller("headerCtrl",HeaderCtrl),HeaderCtrl.$inject=["$rootScope","$scope","$window","$location","AuthFactory","LoggedFactory"]}(),function(){"use strict";function HotelCtrl($scope,$window){}angular.module("ngclient").controller("hotelCtrl",HotelCtrl),HotelCtrl.$inject=["$scope","$window"]}(),function(){"use strict";function LoginCtrl($scope,$window,$location,AuthFactory,LoggedFactory){$scope.login=function(){var username=$scope.username,password=$scope.password;void 0!==username&&void 0!==password?AuthFactory.login(username,password).success(function(data){LoggedFactory.isLogged=!0,LoggedFactory.user=data.user.username,LoggedFactory.userRole=data.user.role,$window.sessionStorage.token=data.token,$window.sessionStorage.user=data.user.username,$window.sessionStorage.userRole=data.user.role,$location.path("/dashboard")}).error(function(status){console.log("Noooooooooo, something went wrong!")}):console.log("Can't get in there buddy, invalid credentials...")}}angular.module("ngclient").controller("loginCtrl",LoginCtrl),LoginCtrl.$inject=["$scope","$window","$location","AuthFactory","LoggedFactory"]}(),function(){"use strict";function OffreController($rootScope,$scope,offreFactory,$location,$routeParams,LoggedFactory){$scope.offres=[],$scope.images=[],$scope.getLang=function(obj,field){return obj[field+$rootScope.lang]},$scope.init=function(){offreFactory.getOffres().then(function(data){$scope.offres=data.data,console.log(data)})},$scope.showContent=function($fileContent){$scope.content=$fileContent},$scope.remove=function(offre){offreFactory.deleteOffre(offre._id);var index=$scope.offres.indexOf(offre);$scope.offres.splice(index,1)},$scope.edit=function(offre){console.log(offre)},$scope.goToView=function(offre){$location.path("/offre/"+offre._id)},$scope.submit=function(){$scope.form.file.$valid&&$scope.file&&offreFactory.createOffre({titlefr:$scope.offreTitleFr,contentfr:$scope.offreContentFr,titleen:$scope.offreTitleEn,contenten:$scope.offreContentEn,file:$scope.file}).then(function(success,error,progress){if(success&&(console.log($scope.offres),$scope.offres.push(success.data),console.log("Success "+success.config.data.file.name+" uploaded. Response: "+JSON.stringify(success.data))),error&&console.log("Error status: "+error.status),progress){var progressPercentage=parseInt(100*evt.loaded/evt.total);console.log("progress: "+progressPercentage+"% "+evt.config.data.file.name)}})},$scope.update=function(offre){var updated={_id:$scope.offre._id,titlefr:$scope.offre.titlefr,contentfr:$scope.offre.contentfr,titleen:$scope.offre.titleen,contenten:$scope.offre.contenten,file:$scope.file};$scope.form.file.$valid&&$scope.file?offreFactory.updateOffreWithImg(updated).then(function(success,error,progress){if(success&&($scope.offres.push(success.data),console.log("Success "+success.config.data.file.name+" uploaded. Response: "+JSON.stringify(success.data))),error&&console.log("Error status: "+error.status),progress){var progressPercentage=parseInt(100*evt.loaded/evt.total);console.log("progress: "+progressPercentage+"% "+evt.config.data.file.name)}}):offreFactory.updateOffre(updated)},$scope.findOne=function(){offreFactory.getOffre($routeParams.id).then(function(data){$scope.offre=data.data})},$scope.isAdmin=function(){return"admin"===LoggedFactory.userRole}}angular.module("ngclient").controller("offreController",OffreController),OffreController.$inject=["$rootScope","$scope","offreFactory","$location","$routeParams","LoggedFactory"]}(),function(){"use strict";function RestoModalController($scope,$modalInstance,menu){$scope.menu=menu,console.log($scope.menu),$scope.cancel=function(){$modalInstance.dismiss("cancel")}}angular.module("ngclient").controller("restoModalCtrl",RestoModalController),RestoModalController.$inject=["$scope","$modalInstance","menu"]}(),function(){"use strict";function RestoController($scope,$modal){$scope.menu="menu/Carte-2015.pdf",$scope.selected="restaurant",$scope.option=["restaurant","brasserie"],$scope.select=function(item){$scope.selected=item},$scope.isActive=function(item){return $scope.selected===item},$scope.open=function(){console.log("here");$modal.open({size:"lg",templateUrl:"partials/resto-modal.html",controller:"restoModalCtrl",resolve:{menu:function(){return $scope.menu}}})}}angular.module("ngclient").controller("restoCtrl",RestoController),RestoController.$inject=["$scope","$modal"]}(),function(){"use strict";function RoomCtrl($rootScope,$scope,roomFactory,$location,$routeParams,LoggedFactory){$scope.rooms=[],$scope.images=[],$scope.amnetiesfr="",$scope.amnetiesen="",$scope.getLang=function(obj,field){return obj[field+$rootScope.lang]},$scope.init=function(){roomFactory.getRooms().then(function(data){$scope.rooms=data.data})},$scope.showContent=function($fileContent){$scope.content=$fileContent},$scope.remove=function(room){roomFactory.deleteRoom(room._id);var index=$scope.rooms.indexOf(room);$scope.rooms.splice(index,1)},$scope.goToView=function(room){$location.path("/chambres/"+room._id)},$scope.submit=function(){$scope.form.file.$valid&&$scope.file&&roomFactory.createRoom({typefr:$scope.roomTypeFr,contentfr:$scope.roomContentFr,pricefr:$scope.roomPriceFr,amnetiesfr:$scope.roomAmnetiesFr.split(","),typeen:$scope.roomTypeEn,contenten:$scope.roomContentEn,priceen:$scope.roomPriceEn,amnetiesen:$scope.roomAmnetiesEn.split(","),file:$scope.file}).then(function(success,error,progress){if(success&&(console.log($scope.rooms),$scope.rooms.push(success.data),console.log("Success "+success.config.data.file.name+" uploaded. Response: "+JSON.stringify(success.data))),error&&console.log("Error status: "+error.status),progress){var progressPercentage=parseInt(100*evt.loaded/evt.total);console.log("progress: "+progressPercentage+"% "+evt.config.data.file.name)}})},$scope.update=function(room){var updated={_id:$scope.room._id,typefr:$scope.room.typefr,contentfr:$scope.room.contentfr,pricefr:$scope.room.pricefr,amnetiesfr:$scope.room.amnetiesfr,typeen:$scope.room.typeen,contenten:$scope.room.contenten,priceen:$scope.room.priceen,amnetiesen:$scope.room.amnetiesen,file:$scope.file};$scope.form.file.$valid&&$scope.file?roomFactory.updateRoomWithImg(updated).then(function(success,error,progress){if(success&&(roomFactory.getRoom($routeParams.id).then(function(data){$scope.room=data.data,$scope.amnetiesfr=data.data.amnetiesfr.join(","),$scope.amnetiesen=data.data.amnetiesen.join(",")}),console.log("Success "+success.config.data.file.name+" uploaded. Response: "+JSON.stringify(success.data))),error&&console.log("Error status: "+error.status),progress){var progressPercentage=parseInt(100*evt.loaded/evt.total);console.log("progress: "+progressPercentage+"% "+evt.config.data.file.name)}}):roomFactory.updateRoom(updated).then(function(data){roomFactory.getRoom($routeParams.id).then(function(data){$scope.room=data.data,$scope.amnetiesfr=data.data.amnetiesfr.join(","),$scope.amnetiesen=data.data.amnetiesen.join(",")})})},$scope.findOne=function(){roomFactory.getRoom($routeParams.id).then(function(data){$scope.room=data.data,$scope.amnetiesfr=data.data.amnetiesfr.join(","),$scope.amnetiesen=data.data.amnetiesen.join(",")})},$scope.$watch("amnetiesen",function(o,n){if(n&&o!==n){var arr=n.split(",");console.log(arr),$scope.room.amnetiesen.length=0,$scope.room.amnetiesen=arr.splice(0)}}),$scope.$watch("amnetiesfr",function(o,n){if(n&&o!==n){var arr=n.split(",");$scope.room.amnetiesfr.length=0,$scope.room.amnetiesfr=arr.splice(0)}}),$scope.isAdmin=function(){return"admin"===LoggedFactory.userRole}}angular.module("ngclient").controller("roomCtrl",RoomCtrl),RoomCtrl.$inject=["$rootScope","$scope","roomFactory","$location","$routeParams","LoggedFactory"]}(),function(){"use strict";function ScrollupController($scope,$location,$routeParams,LoggedFactory){var $=window.jQuery;window.addEventListener("scroll",function(){this.scrollY>200?$("#Layer_1").css({opacity:1}):$("#Layer_1").css({opacity:0})}),$scope.scroll=function(){var speed=750;return $("html, body").animate({scrollTop:0},speed),!1}}angular.module("ngclient").controller("scrollupController",ScrollupController),ScrollupController.$inject=["$scope","$location","$routeParams","LoggedFactory"]}(),function(){"use strict";function UserController($scope,userFactory,$location,$routeParams){$scope.users=[],$scope.init=function(){userFactory.getUsers().then(function(data){$scope.users=data.data})},$scope.remove=function(user){userFactory.deleteUser(user._id);var index=$scope.users.indexOf(user);$scope.users.splice(index,1)}}angular.module("ngclient").controller("userController",UserController),UserController.$inject=["$scope","userFactory","$location","$routeParams"]}(),function(){function NotificationsProvider(){var options={ttl:5e3};this.setOptions=function(newOptions){return angular.extend(options,newOptions),this},this.ttl=function(ttl){return angular.isDefined(ttl)?(options.ttl=ttl,this):options.ttl},this.$get=function(){function Notifications(){this.options=options,this.element=null}return new Notifications}}angular.module("ngclient").provider("Notifications",NotificationsProvider)}(),function(){"use strict";function NotificationsDirective(Notifications){return{restrict:"AE",link:function(scope,iElem,iAttrs){Notifications.element=iElem}}}angular.module("ngclient").directive("gtNotifications",NotificationsDirective),NotificationsDirective.$inject=["Notifications"]}(),function(){"use strict";function NotificationDirective(Notifications,$animate,$timeout){var defaults={ttl:Notifications.options.ttl||5e3};return{restrict:"AE",scope:!0,controller:NotificationController,controllerAs:"$Notification",link:function(scope,iElem,iAttrs,ctrl){var options=angular.extend({},defaults,scope.$eval(iAttrs.NotificationOptions));iAttrs.ttl&&(options.ttl=scope.$eval(iAttrs.ttl)),$animate.move(iElem,Notifications.element),iAttrs.onOpen&&scope.$eval(iAttrs.onOpen),ctrl.timer=$timeout(function(){$animate.leave(iElem),iAttrs.onClose&&scope.$eval(iAttrs.onClose)},options.ttl)}}}function NotificationController($element,$animate,$attrs,$scope){this.timer=null,this.remove=function(){$animate.leave($element),this.timer&&this.timer.cancel&&(this.timer.cancel(),$attrs.onClose&&$scope.$eval($attrs.onClose))}}angular.module("ngclient").directive("gtNotification",NotificationDirective),NotificationDirective.$inject=["Notifications","$animate","$timeout"],NotificationController.$inject=["$element","$animate","$attrs","$scope"]}(),function(){"use strict";function PdfDirective(){return{restrict:"A",link:function(scope,element,attrs){scope.$watch(function(){return console.log(attrs.embedSrc),attrs.embedSrc},function(){var clone=element.clone().attr("data",attrs.embedSrc);element.replaceWith(clone)})}}}angular.module("ngclient").directive("embedSrc",PdfDirective)}(),function(){"use strict";function AuthFactory($window,$location,$http,LoggedFactory){return{login:function(username,password){return $http.post("https://localhost:5555/login",{username:username,password:password})},logout:function(){LoggedFactory.isLogged&&(LoggedFactory.isLogged=!1,delete LoggedFactory.user,delete LoggedFactory.userRole,delete $window.sessionStorage.token,delete $window.sessionStorage.user,delete $window.sessionStorage.userRole,$location.path("/login"))}}}angular.module("ngclient").factory("AuthFactory",AuthFactory),AuthFactory.$inject=["$window","$location","$http","LoggedFactory"]}(),function(){"use strict";function LoggedFactory($window){return{isLogged:!1,check:function(){$window.sessionStorage.token&&$window.sessionStorage.user&&$window.sessionStorage.userRole?(this.isLogged=!0,this.user||(this.user=$window.sessionStorage.user),this.userRole||(this.userRole=$window.sessionStorage.userRole)):(this.isLogged=!1,delete this.user,delete this.userRole)}}}angular.module("ngclient").factory("LoggedFactory",LoggedFactory),LoggedFactory.$inject=["$window"]}(),function(){"use strict";function OffreFactory($http,Upload){return{getOffres:function(){var url="https://localhost:5555/api/v1/offres";return $http.get(url)},getOffre:function(id){var url="https://localhost:5555/api/v1/offre/"+id;return $http.get(url)},deleteOffre:function(id){var url="https://localhost:5555/api/v1/admin/offre/"+id;return $http["delete"](url)},createOffre:function(offre){return Upload.upload({url:"https://localhost:5555/api/v1/admin/offre/",data:{file:offre.file,titlefr:offre.titlefr,contentfr:offre.contentfr,titleen:offre.titleen,contenten:offre.contenten}})},updateOffre:function(offre){console.log(offre);var url="https://localhost:5555/api/v1/admin/offre/"+offre._id;return $http.put(url,{file:offre.file,titlefr:offre.titlefr,contentfr:offre.contentfr,titleen:offre.titleen,contenten:offre.contenten})},updateOffreWithImg:function(offre){return console.log(offre),Upload.upload({url:"https://localhost:5555/api/v1/admin/offreWithImg/"+offre._id,data:{file:offre.file,titlefr:offre.titlefr,contentfr:offre.contentfr,titleen:offre.titleen,contenten:offre.contenten}})}}}angular.module("ngclient").factory("offreFactory",OffreFactory),OffreFactory.$inject=["$http","Upload"]}(),function(){"use strict";function RoomFactory($http,Upload){return{getRooms:function(){var url="https://localhost:5555/api/v1/rooms";return $http.get(url)},getRoom:function(id){var url="https://localhost:5555/api/v1/room/"+id;return $http.get(url)},deleteRoom:function(id){var url="https://localhost:5555/api/v1/admin/room/"+id;return $http["delete"](url)},createRoom:function(room){return Upload.upload({url:"https://localhost:5555/api/v1/admin/room/",data:{file:room.file,typefr:room.typefr,contentfr:room.contentfr,amnetiesfr:room.amnetiesfr.splice(0),pricefr:room.pricefr,typeen:room.typeen,contenten:room.contenten,amnetiesen:room.amnetiesen.splice(0),priceen:room.priceen}})},updateRoom:function(room){console.log(room);var url="https://localhost:5555/api/v1/admin/room/"+room._id;return $http.put(url,{file:room.file,typefr:room.typefr,contentfr:room.contentfr,amnetiesfr:room.amnetiesfr.splice(0),pricefr:room.pricefr,typeen:room.typeen,contenten:room.contenten,amnetiesen:room.amnetiesen.splice(0),priceen:room.priceen})},updateRoomWithImg:function(room){return console.log(room),Upload.upload({url:"https://localhost:5555/api/v1/admin/roomWithImg/"+room._id,data:{file:room.file,typefr:room.typefr,contentfr:room.contentfr,amnetiesfr:room.amnetiesfr.splice(0),pricefr:room.pricefr,typeen:room.typeen,contenten:room.contenten,amnetiesen:room.amnetiesen.splice(0),priceen:room.priceen}})}}}angular.module("ngclient").factory("roomFactory",RoomFactory),RoomFactory.$inject=["$http","Upload"]}(),function(){"use strict";function TokenInterceptor($q,$window){return{request:function(config){return config.headers=config.headers||{},$window.sessionStorage.token&&(config.headers["x-Access-Token"]=$window.sessionStorage.token),config||$q.when(config)},response:function(response){return response||$q.when(response)}}}angular.module("ngclient").factory("TokenInterceptor",TokenInterceptor),TokenInterceptor.$inject=["$q","$window"]}(),function(){"use strict";function UserFactory($http){return{getUsers:function(){var url="https://localhost:5555/api/v1/admin/users";return $http.get(url)},deleteUser:function(id){var url="https://localhost:5555/api/v1/admin/user/"+id;return $http["delete"](url)}}}angular.module("ngclient").factory("userFactory",UserFactory),UserFactory.$inject=["$http"]}();